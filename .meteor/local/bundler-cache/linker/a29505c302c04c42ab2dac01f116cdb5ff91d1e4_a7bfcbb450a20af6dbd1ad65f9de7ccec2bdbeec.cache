[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"subs.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/subs.js                                                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Subs: () => Subs\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Subs = new Mongo.Collection('tbl_annonsorer');\n\nif (Meteor.isServer) {\n  Meteor.publish('tbl_annonsorer', function subsPublication() {\n    return Subs.find();\n  });\n  Router.route('/subs', {\n    where: 'server'\n  }).get(function () {\n    var data = this.params.query.prenNr;\n    var res = Subs.find({\n      sub_prenNr: data\n    }).fetch();\n    this.response.statusCode = 200;\n    this.response.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n    this.response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n    this.response.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    this.response.end(JSON.stringify(res));\n  });\n  Router.route('/update', {\n    where: 'server'\n  }).get(function () {\n    var prenNumber = this.params.query.prenNr;\n    var res = Subs.find({\n      sub_prenNr: prenNumber\n    });\n    var firstName = this.params.query.subFirstName;\n    var lastName = this.params.query.subLastName;\n    var personNumber = this.params.query.subPersonNumber;\n    var address = this.params.query.subAddress;\n    var postalCode = this.params.query.subPostalCode;\n    Subs.update({\n      sub_prenNr: prenNumber\n    }, {\n      $set: {\n        sub_fornamn: firstName,\n        sub_personNr: personNumber,\n        sub_fornamn: firstName,\n        sub_efternamn: lastName,\n        sub_utAddr: address,\n        sub_postNr: postalCode\n      }\n    });\n    this.response.statusCode = 200;\n    this.response.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n    this.response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n    this.response.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    this.response.end(JSON.stringify(\"success\"));\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// server/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"../imports/api/subs.js\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"049820e36ebdaecf4191c12afd76c2e074a97c34","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/subs.js","server/main.js"],"names":["module","export","Subs","Mongo","link","v","Collection","Meteor","isServer","publish","subsPublication","find","Router","route","where","get","data","params","query","prenNr","res","sub_prenNr","fetch","response","statusCode","setHeader","end","JSON","stringify","prenNumber","firstName","subFirstName","lastName","subLastName","personNumber","subPersonNumber","address","subAddress","postalCode","subPostalCode","update","$set","sub_fornamn","sub_personNr","sub_efternamn","sub_utAddr","sub_postNr"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,MAAI,EAAC,MAAIA;AAAV,CAAd;AAA+B,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAElC,MAAMH,IAAI,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,gBAArB,CAAb;;AAGP,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACjBD,QAAM,CAACE,OAAP,CAAe,gBAAf,EAAiC,SAASC,eAAT,GAA2B;AACxD,WAAOR,IAAI,CAACS,IAAL,EAAP;AACH,GAFD;AAIAC,QAAM,CAACC,KAAP,CAAa,OAAb,EAAsB;AAACC,SAAK,EAAE;AAAR,GAAtB,EACCC,GADD,CACK,YAAU;AACX,QAAIC,IAAI,GAAG,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,MAA7B;AACA,QAAIC,GAAG,GAAGlB,IAAI,CAACS,IAAL,CAAU;AAACU,gBAAU,EAAEL;AAAb,KAAV,EAA8BM,KAA9B,EAAV;AACA,SAAKC,QAAL,CAAcC,UAAd,GAA2B,GAA3B;AACA,SAAKD,QAAL,CAAcE,SAAd,CAAwB,6BAAxB,EAAuD,uBAAvD;AACA,SAAKF,QAAL,CAAcE,SAAd,CAAwB,kCAAxB,EAA4D,MAA5D;AACA,SAAKF,QAAL,CAAcE,SAAd,CAAwB,8BAAxB,EAAwD,gDAAxD;AACA,SAAKF,QAAL,CAAcG,GAAd,CAAkBC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAAlB;AACH,GATD;AAUAR,QAAM,CAACC,KAAP,CAAa,SAAb,EAAwB;AAACC,SAAK,EAAE;AAAR,GAAxB,EACCC,GADD,CACK,YAAU;AAEX,QAAIc,UAAU,GAAG,KAAKZ,MAAL,CAAYC,KAAZ,CAAkBC,MAAnC;AACA,QAAIC,GAAG,GAAGlB,IAAI,CAACS,IAAL,CAAU;AAACU,gBAAU,EAAEQ;AAAb,KAAV,CAAV;AACA,QAAIC,SAAS,GAAG,KAAKb,MAAL,CAAYC,KAAZ,CAAkBa,YAAlC;AACA,QAAIC,QAAQ,GAAG,KAAKf,MAAL,CAAYC,KAAZ,CAAkBe,WAAjC;AACA,QAAIC,YAAY,GAAG,KAAKjB,MAAL,CAAYC,KAAZ,CAAkBiB,eAArC;AACA,QAAIC,OAAO,GAAG,KAAKnB,MAAL,CAAYC,KAAZ,CAAkBmB,UAAhC;AACA,QAAIC,UAAU,GAAG,KAAKrB,MAAL,CAAYC,KAAZ,CAAkBqB,aAAnC;AACArC,QAAI,CAACsC,MAAL,CAAY;AAACnB,gBAAU,EAAGQ;AAAd,KAAZ,EAAsC;AAACY,UAAI,EAAC;AAAEC,mBAAW,EAAGZ,SAAhB;AACrCa,oBAAY,EAAET,YADuB;AAEpCQ,mBAAW,EAAEZ,SAFuB;AAGpCc,qBAAa,EAAEZ,QAHqB;AAIpCa,kBAAU,EAAET,OAJwB;AAKpCU,kBAAU,EAAER;AALwB;AAAN,KAAtC;AAMA,SAAKf,QAAL,CAAcC,UAAd,GAA2B,GAA3B;AACA,SAAKD,QAAL,CAAcE,SAAd,CAAwB,6BAAxB,EAAuD,uBAAvD;AACA,SAAKF,QAAL,CAAcE,SAAd,CAAwB,kCAAxB,EAA4D,MAA5D;AACA,SAAKF,QAAL,CAAcE,SAAd,CAAwB,8BAAxB,EAAwD,gDAAxD;AACA,SAAKF,QAAL,CAAcG,GAAd,CAAkBC,IAAI,CAACC,SAAL,CAAe,SAAf,CAAlB;AACH,GArBD;AAuBH,C;;;;;;;;;;;AC3CD5B,MAAM,CAACI,IAAP,CAAY,wBAAZ,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Subs = new Mongo.Collection('tbl_annonsorer');\n\n\nif (Meteor.isServer) {\n    Meteor.publish('tbl_annonsorer', function subsPublication() {\n        return Subs.find();\n    });\n    \n    Router.route('/subs', {where: 'server'})\n    .get(function(){\n        var data = this.params.query.prenNr;\n        var res = Subs.find({sub_prenNr: data}).fetch()\n        this.response.statusCode = 200;\n        this.response.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n        this.response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        this.response.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        this.response.end(JSON.stringify(res));\n    })\n    Router.route('/update', {where: 'server'})\n    .get(function(){\n        \n        var prenNumber = this.params.query.prenNr;\n        var res = Subs.find({sub_prenNr: prenNumber})\n        var firstName = this.params.query.subFirstName;\n        var lastName = this.params.query.subLastName;\n        var personNumber = this.params.query.subPersonNumber;\n        var address = this.params.query.subAddress;\n        var postalCode = this.params.query.subPostalCode;\n        Subs.update({sub_prenNr : prenNumber},{$set:{ sub_fornamn : firstName,\n               sub_personNr: personNumber,\n                sub_fornamn: firstName,\n                sub_efternamn: lastName,\n                sub_utAddr: address, \n                sub_postNr: postalCode,}})\n        this.response.statusCode = 200;\n        this.response.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n        this.response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        this.response.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        this.response.end(JSON.stringify(\"success\"));\n    })\n\n}","import '../imports/api/subs.js';"]}}]